name: Compile avalonia project

on: push

permissions:
  contents: write

jobs:
  build-and-publish:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            runtime: linux-x64
            self_contained: true
          - os: windows-latest
            runtime: win-x64
            self_contained: true
          - os: windows-latest
            runtime: win-x64
            self_contained: false

    env:
      OUTPUT_BASE: ${{ github.workspace }}/cs/output

    steps:
    - name: Checkout
      uses: actions/checkout@v5

    - name: Set Package Name
      shell: bash
      run: |
        package_name="NetTest-AvaloniaApplication-${{ matrix.runtime }}"
        if [ '${{ matrix.self_contained }}' = 'true' ]; then
          package_name="${package_name}-selfcontained"
        fi
        echo "PACKAGE_NAME=${package_name}" >> $GITHUB_ENV

    - name: Setup
      uses: actions/setup-dotnet@v5
      with:
        dotnet-version: '9.0.x'

    - name: Install Go
      uses: actions/setup-go@v6
      with:
        go-version: '1.25'
      
    - name: Build Go libraries
      run: |
        python scripts/build_go.py

    - name: Build
      run: |
        cd cs
        dotnet publish ./AvaloniaApplication/AvaloniaApplication.csproj -c Release -r ${{ matrix.runtime }} --self-contained=${{ matrix.self_contained }} -o ${{ env.OUTPUT_BASE }}

    - name: Compress
      shell: bash
      run: |
        7z a -t7z -m0=lzma2 -mx=9 -mfb=64 -md=32m -ms=on "${{ env.PACKAGE_NAME }}.7z" "${{ env.OUTPUT_BASE }}"

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.PACKAGE_NAME }}.7z
        path: ${{ env.PACKAGE_NAME }}.7z
        compression-level: 0

    - name: Release Package
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        files: |
          ${{ env.PACKAGE_NAME }}.7z
        generate_release_notes: true
