name: Compile Qt project

on: push

env:
  BUILD_TYPE: Release
  QT_VERSION: '6.9.1'

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: windows-latest
            qt_host: windows
            arch: win64_msvc2022_64
            cmake_generator: 'Visual Studio 17 2022'
          - os: ubuntu-latest
            qt_host: linux
            arch: linux_gcc_64
            cmake_generator: 'Ninja'

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Get CMake
      uses: lukka/get-cmake@latest

    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        cache: 'true'
        version: ${{ env.QT_VERSION }}
        host: ${{ matrix.qt_host }}
        target: 'desktop'
        arch: ${{ matrix.arch }}

    - name: Install Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24.6'
      
    - name: Build Go libraries
      shell: bash
      run: |
        chmod +x ./build_go.sh
        ./build_go.sh

    - name: Configure CMake
      run: |
        cd Qt
        cmake -B ${{github.workspace}}/Qt/build -S . -G "${{ matrix.cmake_generator }}" -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DCMAKE_RUNTIME_OUTPUT_DIRECTORY=${{github.workspace}}/Qt/build/bin

    - name: Build
      run: |
        cd Qt
        cmake --build ${{github.workspace}}/Qt/build --config ${{ env.BUILD_TYPE }} --parallel

    - name: Package (Windows Only)
      if: matrix.os == 'windows-latest'
      run: |
        mkdir -p release_package
        cp Qt/build/bin/Release/appNetTest.exe release_package/
        cp Qt/build/bin/Release/netcore.dll release_package/
        windeployqt --qmldir . release_package/appNetTest.exe
      shell: bash

    - name: Compress (Windows Only)
      if: matrix.os == 'windows-latest'
      run: |
        7z a -t7z -m0=lzma2 -mx=9 -mfb=64 -md=32m -ms=on NetTest_${{ matrix.qt_host }}_${{ matrix.arch }}.7z release_package
      shell: bash

    - name: Upload executable (Windows Only)
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: appNetTest.exe
        path: Qt/build/bin/Release/appNetTest.exe
        compression-level: 0

    - name: Upload build artifacts (Windows)
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: NetTest_${{ matrix.qt_host }}_${{ matrix.arch }}.7z
        path: NetTest_${{ matrix.qt_host }}_${{ matrix.arch }}.7z
        compression-level: 0

    - name: Release Package (Windows Only)
      if: matrix.os == 'windows-latest' && startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        files: |
          ${{github.workspace}}/NetTest_${{ matrix.qt_host }}_${{ matrix.arch }}.7z
          ${{github.workspace}}/Qt/build/bin/Release/appNetTest.exe
        generate_release_notes: true

    - name: Compress (Linux/macOS)
      if: matrix.os != 'windows-latest'
      run: |
        7z a -t7z -m0=lzma2 -mx=9 -mfb=64 -md=32m -ms=on NetTest_${{ matrix.qt_host }}_${{ matrix.arch }}.7z Qt/build/bin

    - name: Upload build artifacts (Linux/macOS)
      if: matrix.os != 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: NetTest_${{ matrix.qt_host }}_${{ matrix.arch }}
        path: NetTest_${{ matrix.qt_host }}_${{ matrix.arch }}.7z
        compression-level: 0

    - name: Release Package (Linux/macOS)
      if: matrix.os != 'windows-latest' && startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        files: |
          ${{github.workspace}}/NetTest_${{ matrix.qt_host }}_${{ matrix.arch }}.7z
        generate_release_notes: true
